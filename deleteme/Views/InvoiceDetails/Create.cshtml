@model deleteme.Models.Entities.InvoiceDetail

@{
    ViewData["Title"] = "Agregar Detalle a Factura";
}

<h1>Agregar Detalle a Factura</h1>

<h4>Detalle de Factura</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @* Formulario para agregar detalle a factura *@
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            @* Selección de factura *@
            <div class="form-group">
                <label asp-for="InvoiceId" class="control-label">Factura #</label>
                <select asp-for="InvoiceId" class="form-control" asp-items="ViewBag.InvoiceId">
                    <option value="">-- Seleccione una factura --</option>
                </select>
                <span asp-validation-for="InvoiceId" class="text-danger"></span>
            </div>
            
            @* Selección de producto o servicio *@
            <div class="form-group">
                <label asp-for="ProductOrServiceId" class="control-label">Producto/Servicio</label>
                <select asp-for="ProductOrServiceId" class="form-control" asp-items="ViewBag.ProductOrServiceId" id="product-select">
                    <option value="">-- Seleccione un producto/servicio --</option>
                </select>
                <span asp-validation-for="ProductOrServiceId" class="text-danger"></span>
            </div>
            
            @* Campo para la cantidad *@
            <div class="form-group">
                <label asp-for="Quantity" class="control-label">Cantidad</label>
                <input asp-for="Quantity" type="number" min="1" class="form-control" id="quantity-input" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            
            @* Campo para el precio unitario *@
            <div class="form-group">
                <label asp-for="Price" class="control-label">Precio Unitario</label>
                <input asp-for="Price" type="number" step="0.01" class="form-control" id="price-input" />
                <span asp-validation-for="Price" class="text-danger"></span>
                <small class="form-text text-muted">Dejar en blanco para usar el precio del producto</small>
            </div>
            
            @* Campos de solo lectura para mostrar cálculos *@
            <div class="form-group">
                <label class="control-label">Subtotal</label>
                <input type="text" class="form-control" id="subtotal-display" readonly />
            </div>
            
            <div class="alert alert-info">
                <strong>Nota:</strong> Los impuestos y el total se calcularán automáticamente basados en el producto seleccionado.
            </div>
            
            @* Botones de acción *@
            <div class="form-group">
                <input type="submit" value="Agregar" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Volver al listado</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Script para calcular el subtotal en tiempo real
        function calculateSubtotal() {
            var quantity = parseFloat(document.getElementById('quantity-input').value) || 0;
            var price = parseFloat(document.getElementById('price-input').value) || 0;
            var subtotal = quantity * price;
            
            document.getElementById('subtotal-display').value = '$' + subtotal.toFixed(2);
        }
        
        // Escuchamos cambios en cantidad y precio
        document.getElementById('quantity-input').addEventListener('input', calculateSubtotal);
        document.getElementById('price-input').addEventListener('input', calculateSubtotal);
    </script>
}